//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankingApplication.BankingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankingService.IMKBank")]
    public interface IMKBank {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/CreateNewAccount", ReplyAction="http://tempuri.org/IMKBank/CreateNewAccountResponse")]
        bool CreateNewAccount(string username, string pwd, string email, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/CreateNewAccount", ReplyAction="http://tempuri.org/IMKBank/CreateNewAccountResponse")]
        System.Threading.Tasks.Task<bool> CreateNewAccountAsync(string username, string pwd, string email, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/Login", ReplyAction="http://tempuri.org/IMKBank/LoginResponse")]
        int Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/Login", ReplyAction="http://tempuri.org/IMKBank/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/RecordDeposit", ReplyAction="http://tempuri.org/IMKBank/RecordDepositResponse")]
        bool RecordDeposit(int accountNumber, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/RecordDeposit", ReplyAction="http://tempuri.org/IMKBank/RecordDepositResponse")]
        System.Threading.Tasks.Task<bool> RecordDepositAsync(int accountNumber, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/RecordWithDrawl", ReplyAction="http://tempuri.org/IMKBank/RecordWithDrawlResponse")]
        bool RecordWithDrawl(int accountNumber, double withdrawlAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/RecordWithDrawl", ReplyAction="http://tempuri.org/IMKBank/RecordWithDrawlResponse")]
        System.Threading.Tasks.Task<bool> RecordWithDrawlAsync(int accountNumber, double withdrawlAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/CheckBalance", ReplyAction="http://tempuri.org/IMKBank/CheckBalanceResponse")]
        double CheckBalance(int accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/CheckBalance", ReplyAction="http://tempuri.org/IMKBank/CheckBalanceResponse")]
        System.Threading.Tasks.Task<double> CheckBalanceAsync(int accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/GetAccountNumber", ReplyAction="http://tempuri.org/IMKBank/GetAccountNumberResponse")]
        int GetAccountNumber(string Name, string email, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/GetAccountNumber", ReplyAction="http://tempuri.org/IMKBank/GetAccountNumberResponse")]
        System.Threading.Tasks.Task<int> GetAccountNumberAsync(string Name, string email, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/GetUserDetails", ReplyAction="http://tempuri.org/IMKBank/GetUserDetailsResponse")]
        System.Data.DataSet GetUserDetails(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/GetUserDetails", ReplyAction="http://tempuri.org/IMKBank/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserDetailsAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/TransactionHistory", ReplyAction="http://tempuri.org/IMKBank/TransactionHistoryResponse")]
        System.Data.DataSet TransactionHistory(int accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMKBank/TransactionHistory", ReplyAction="http://tempuri.org/IMKBank/TransactionHistoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TransactionHistoryAsync(int accountNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMKBankChannel : BankingApplication.BankingService.IMKBank, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MKBankClient : System.ServiceModel.ClientBase<BankingApplication.BankingService.IMKBank>, BankingApplication.BankingService.IMKBank {
        
        public MKBankClient() {
        }
        
        public MKBankClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MKBankClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MKBankClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MKBankClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateNewAccount(string username, string pwd, string email, string mobile) {
            return base.Channel.CreateNewAccount(username, pwd, email, mobile);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewAccountAsync(string username, string pwd, string email, string mobile) {
            return base.Channel.CreateNewAccountAsync(username, pwd, email, mobile);
        }
        
        public int Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool RecordDeposit(int accountNumber, double amount) {
            return base.Channel.RecordDeposit(accountNumber, amount);
        }
        
        public System.Threading.Tasks.Task<bool> RecordDepositAsync(int accountNumber, double amount) {
            return base.Channel.RecordDepositAsync(accountNumber, amount);
        }
        
        public bool RecordWithDrawl(int accountNumber, double withdrawlAmount) {
            return base.Channel.RecordWithDrawl(accountNumber, withdrawlAmount);
        }
        
        public System.Threading.Tasks.Task<bool> RecordWithDrawlAsync(int accountNumber, double withdrawlAmount) {
            return base.Channel.RecordWithDrawlAsync(accountNumber, withdrawlAmount);
        }
        
        public double CheckBalance(int accountNumber) {
            return base.Channel.CheckBalance(accountNumber);
        }
        
        public System.Threading.Tasks.Task<double> CheckBalanceAsync(int accountNumber) {
            return base.Channel.CheckBalanceAsync(accountNumber);
        }
        
        public int GetAccountNumber(string Name, string email, string mobile) {
            return base.Channel.GetAccountNumber(Name, email, mobile);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountNumberAsync(string Name, string email, string mobile) {
            return base.Channel.GetAccountNumberAsync(Name, email, mobile);
        }
        
        public System.Data.DataSet GetUserDetails(int accountNo) {
            return base.Channel.GetUserDetails(accountNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserDetailsAsync(int accountNo) {
            return base.Channel.GetUserDetailsAsync(accountNo);
        }
        
        public System.Data.DataSet TransactionHistory(int accountNumber) {
            return base.Channel.TransactionHistory(accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TransactionHistoryAsync(int accountNumber) {
            return base.Channel.TransactionHistoryAsync(accountNumber);
        }
    }
}
